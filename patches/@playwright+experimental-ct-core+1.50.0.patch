diff --git a/node_modules/@playwright/experimental-ct-core/lib/viteUtils.js b/node_modules/@playwright/experimental-ct-core/lib/viteUtils.js
index 81af34c..4d24c05 100644
--- a/node_modules/@playwright/experimental-ct-core/lib/viteUtils.js
+++ b/node_modules/@playwright/experimental-ct-core/lib/viteUtils.js
@@ -15,6 +15,7 @@ var _path = _interopRequireDefault(require("path"));
 var _utilsBundle = require("playwright-core/lib/utilsBundle");
 var _compilationCache = require("playwright/lib/transform/compilationCache");
 var _transform = require("playwright/lib/transform/transform");
+const { constructURLBasedOnBaseURL } = require("../../../playwright-core/lib/utils/isomorphic/urlMatch");
 function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
 /**
  * Copyright (c) Microsoft Corporation.
@@ -153,6 +154,12 @@ const compiledReactRE = /(const|var)\s+React\s*=/;
 function transformIndexFile(id, content, templateDir, registerSource, importInfos) {
   // Vite React plugin will do this for .jsx files, but not .js files.
   if (id.endsWith('.js') && content.includes('React.createElement') && !content.match(importReactRE) && !content.match(compiledReactRE)) {
+    // typescript _does_ include references to React but we don't want to transform it because it breaks module interop
+    // since TS is using it's own module format
+    if (id.endsWith('node_modules/typescript/lib/typescript.js')) {
+      console.log(id)
+      return
+    }
     const code = `import React from 'react';\n${content}`;
     return {
       code,
